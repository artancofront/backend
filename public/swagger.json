{
    "openapi": "3.0.0",
    "info": {
        "title": "CMS manager",
        "version": "0.1"
    },
    "servers": [
        {
            "url": "http://127.0.0.1/artancms/public",
            "description": "Local development server"
        }
    ],
    "paths": {
        "/api/ask-otp": {
            "post": {
                "summary": "Request OTP for phone number",
                "description": "Request an OTP to be sent to the user's phone number for registration.",
                "operationId": "d43848948ac5541a7b2b6bcee926dbb6",
                "requestBody": {
                    "description": "User's phone number to send OTP",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "phone": {
                                        "type": "string",
                                        "example": "1234567890"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OTP sent for registration"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid phone number format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid phone number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/verify-otp": {
            "post": {
                "summary": "Verify OTP and get a token",
                "description": "Verify OTP sent to the user's phone number and return a JWT token.",
                "operationId": "ac345090ebf5e75e3ffe19111987b7a2",
                "requestBody": {
                    "description": "User's phone number and OTP to verify",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "phone": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP verified successfully and token returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "jwt-token-here"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid OTP",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid OTP"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/reset-password": {
            "post": {
                "summary": "Reset password using OTP",
                "description": "Reset a user's password using OTP sent to their phone.",
                "operationId": "45632c22024b48bffbbe7aed942afb95",
                "requestBody": {
                    "description": "Password reset data including OTP and new password",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "phone": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "new-password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid OTP",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid OTP"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/login-password": {
            "post": {
                "summary": "Login using email and password",
                "description": "Login with email and password and receive a JWT token.",
                "operationId": "a34efc9cbdefe6182b38676e595c003a",
                "requestBody": {
                    "description": "Login credentials (email and password)",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful and token returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "jwt-token-here"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "summary": "Get all users",
                "description": "Retrieve a list of all users",
                "operationId": "c457726701591d1183b53aa71fc13441",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of users per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "summary": "Get single user by ID",
                "description": "Retrieve a user by their ID",
                "operationId": "36a33ff774d5cba33c039dec2c3e0287",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "summary": "Update user by ID",
                "description": "Update the user information by ID",
                "operationId": "b9091397c8b25f12c6adb74be6ce3a5a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "summary": "Delete user by ID",
                "description": "Delete a user by their ID",
                "operationId": "fa56cffde745d3f152f95cbacd936c0b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/show-profile": {
            "get": {
                "summary": "Get the authenticated user's profile",
                "description": "Retrieve the currently authenticated user's profile",
                "operationId": "4276634b4c2bc70c82ac05c03a9063cc",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/update-profile": {
            "post": {
                "summary": "Update authenticated user's profile",
                "description": "Update the currently authenticated user's profile",
                "operationId": "eca91ed039d1a19bb26f72c86500be79",
                "requestBody": {
                    "description": "User profile data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Client": {
                "title": "Client",
                "description": "Client model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "phone_number": {
                        "type": "string",
                        "example": "+1234567890"
                    },
                    "company_name": {
                        "type": "string",
                        "example": "Acme Inc.",
                        "nullable": true
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Street, City, Country",
                        "nullable": true
                    },
                    "website_url": {
                        "type": "string",
                        "example": "https://example.com",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "inactive",
                            "on_hold"
                        ],
                        "example": "active"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "projects": {
                        "description": "Get the projects associated with the client.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Project"
                        }
                    }
                },
                "type": "object"
            },
            "Project": {
                "title": "Project",
                "description": "Project model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "E-commerce CMS"
                    },
                    "slug": {
                        "type": "string",
                        "example": "ecommerce-cms"
                    },
                    "description": {
                        "type": "string",
                        "example": "A fully functional e-commerce CMS.",
                        "nullable": true
                    },
                    "basic_info": {
                        "type": "object",
                        "example": {
                            "type": "CMS",
                            "version": "1.0.0"
                        },
                        "nullable": true
                    },
                    "super_admin_username": {
                        "type": "string",
                        "example": "admin",
                        "nullable": true
                    },
                    "super_admin_password": {
                        "type": "string",
                        "example": "hashed_password",
                        "nullable": true
                    },
                    "theme_settings": {
                        "type": "object",
                        "example": {
                            "theme": "dark",
                            "font": "Roboto"
                        },
                        "nullable": true
                    },
                    "cms_settings": {
                        "type": "object",
                        "example": {
                            "multi_language": true,
                            "cache_enabled": false
                        },
                        "nullable": true
                    },
                    "plugins": {
                        "type": "object",
                        "example": {
                            "seo_plugin": true,
                            "analytics": true
                        },
                        "nullable": true
                    },
                    "features": {
                        "type": "object",
                        "example": {
                            "search": true,
                            "notifications": true
                        },
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "in_progress",
                            "completed",
                            "paused",
                            "canceled"
                        ],
                        "example": "in_progress"
                    },
                    "client_id": {
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "example": "Urgent project",
                        "nullable": true
                    },
                    "billing_info": {
                        "type": "string",
                        "example": "Paid in full",
                        "nullable": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "deployment_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-05-10T12:30:00Z",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "client": {
                        "$ref": "#/components/schemas/Client"
                    }
                },
                "type": "object"
            },
            "Role": {
                "required": [
                    "name",
                    "permissions"
                ],
                "properties": {
                    "id": {
                        "description": "Role ID",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of the role",
                        "type": "string"
                    },
                    "description": {
                        "description": "The description of the role",
                        "type": "string"
                    },
                    "permissions": {
                        "description": "List of permissions for the role",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "created_at": {
                        "description": "The timestamp when the role was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "The timestamp when the role was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "User": {
                "required": [
                    "phone",
                    "password",
                    "email",
                    "name"
                ],
                "properties": {
                    "id": {
                        "description": "User ID",
                        "type": "integer"
                    },
                    "phone": {
                        "description": "User phone number",
                        "type": "string"
                    },
                    "email": {
                        "description": "User email address",
                        "type": "string",
                        "format": "email"
                    },
                    "name": {
                        "description": "User's name",
                        "type": "string"
                    },
                    "password": {
                        "description": "User password",
                        "type": "string"
                    },
                    "phone_verified_at": {
                        "description": "Phone verification timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "email_verified_at": {
                        "description": "Email verification timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "role": {
                        "$ref": "#/components/schemas/Role"
                    },
                    "created_at": {
                        "description": "User creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "User update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "description": "Authentication using Bearer token (Sanctum)",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}