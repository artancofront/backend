{
    "openapi": "3.0.0",
    "info": {
        "title": "CMS template",
        "version": "0.1"
    },
    "paths": {
        "/api/admin/product-comments": {
            "get": {
                "tags": [
                    "Admin Product Comments"
                ],
                "summary": "Get all product comments",
                "operationId": "a0e6557fb6b1d409b28b4220b9b065d8",
                "parameters": [
                    {
                        "name": "is_approved",
                        "in": "query",
                        "description": "Filter by approval status",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of product comments"
                    }
                }
            }
        },
        "/api/admin/product-comments/{productId}": {
            "get": {
                "tags": [
                    "Admin Product Comments"
                ],
                "summary": "Get product comments by product ID",
                "operationId": "280b4db03e9662a965ee3a3ec84ce96c",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "The ID of the product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "is_approved",
                        "in": "query",
                        "description": "Filter by approval status",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of product comments for the specified product"
                    }
                }
            }
        },
        "/api/admin/product-comments/{id}": {
            "get": {
                "tags": [
                    "Admin Product Comments"
                ],
                "summary": "Show a specific product comment",
                "operationId": "ba6716e41cfd7e9856730a6bd7b75567",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the comment",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product comment details"
                    },
                    "404": {
                        "description": "Comment not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin Product Comments"
                ],
                "summary": "Delete a product comment",
                "operationId": "2eb0b6723f0c5c53806cb487747dd9b8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the comment",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete result"
                    }
                }
            }
        },
        "/api/admin/product-comments/{id}/approval": {
            "put": {
                "tags": [
                    "Admin Product Comments"
                ],
                "summary": "Set approval status of a comment",
                "operationId": "7feca476b6330f7f0c4ae6bc9ee974ce",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the comment",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "description": "Approval status",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Approval status updated"
                    }
                }
            }
        },
        "/api/admin/product-comments/{commentId}/admin-reply": {
            "post": {
                "tags": [
                    "Admin Product Comments"
                ],
                "summary": "Add an admin reply to a product comment",
                "operationId": "7f24abeee1cd8b0883199ee318639b77",
                "parameters": [
                    {
                        "name": "commentId",
                        "in": "path",
                        "description": "The ID of the product comment",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "text"
                                ],
                                "properties": {
                                    "text": {
                                        "description": "The admin's reply text",
                                        "type": "string"
                                    },
                                    "product_comment_rating_id": {
                                        "description": "The ID of the related product comment rating",
                                        "type": "integer"
                                    },
                                    "product_conversation_id": {
                                        "description": "The ID of the related product conversation",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Admin reply created successfully"
                    },
                    "400": {
                        "description": "Invalid input data"
                    }
                }
            }
        },
        "/api/admin/product-comments/admin-reply/{replyId}": {
            "delete": {
                "tags": [
                    "Admin Product Comments"
                ],
                "summary": "Delete an admin reply",
                "operationId": "3cbfa3c528aad9c37f330e3af9fb7c28",
                "parameters": [
                    {
                        "name": "replyId",
                        "in": "path",
                        "description": "The ID of the admin reply",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin reply deleted successfully"
                    },
                    "404": {
                        "description": "Admin reply not found"
                    }
                }
            }
        },
        "/api/admin/product-conversations": {
            "get": {
                "tags": [
                    "Admin Product Conversations"
                ],
                "summary": "Get all product conversations",
                "operationId": "c32c8095ae186fc2e839f1ee81215972",
                "parameters": [
                    {
                        "name": "is_approved",
                        "in": "query",
                        "description": "Filter by approval status",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of product conversations"
                    }
                }
            }
        },
        "/api/admin/product-conversations/{id}": {
            "get": {
                "tags": [
                    "Admin Product Conversations"
                ],
                "summary": "Get a specific product conversation",
                "operationId": "a8cedd347e964065c8869aa0feb2747f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the conversation",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product conversation details"
                    },
                    "404": {
                        "description": "Conversation not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin Product Conversations"
                ],
                "summary": "Delete a product conversation",
                "operationId": "1d44994b31ca6000520d7792da617eae",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the conversation",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Conversation deleted"
                    }
                }
            }
        },
        "/api/admin/product-conversations/product/{productId}": {
            "get": {
                "tags": [
                    "Admin Product Conversations"
                ],
                "summary": "Get product conversations by product ID",
                "operationId": "887872742abb2bc0600e3c06ec610f2d",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "The ID of the product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "is_approved",
                        "in": "query",
                        "description": "Filter by approval status",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of product conversations for the specified product"
                    }
                }
            }
        },
        "/api/admin/product-conversations/{conversationId}/replies": {
            "get": {
                "tags": [
                    "Admin Product Conversations"
                ],
                "summary": "Get replies for a conversation",
                "operationId": "eebcb6df5486c2ad41b98a27742b4992",
                "parameters": [
                    {
                        "name": "conversationId",
                        "in": "path",
                        "description": "The ID of the conversation",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "is_approved",
                        "in": "query",
                        "description": "Filter by approval status",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of replies for the specified conversation"
                    }
                }
            }
        },
        "/api/admin/product-conversations/{id}/approval": {
            "put": {
                "tags": [
                    "Admin Product Conversations"
                ],
                "summary": "Approve a product conversation",
                "operationId": "594ea80f44ccfa8f2db6a069ef880726",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the conversation",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Conversation approved"
                    }
                }
            }
        },
        "/api/admin/product-conversations/{id}/admin-reply": {
            "post": {
                "tags": [
                    "Admin Product Conversations"
                ],
                "summary": "Add an admin reply to a conversation",
                "operationId": "81eb3d7fd64ed5dec931f67f0d62ab54",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the conversation",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "text"
                                ],
                                "properties": {
                                    "text": {
                                        "description": "Reply text",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Admin reply added"
                    }
                }
            }
        },
        "/api/admin/product-conversations/{conversationId}/admin-reply/{replyId}": {
            "delete": {
                "tags": [
                    "Admin Product Conversations"
                ],
                "summary": "Delete an admin reply from a conversation",
                "operationId": "b2cfd86c6028f83350f55b390c4f2cc9",
                "parameters": [
                    {
                        "name": "conversationId",
                        "in": "path",
                        "description": "The ID of the conversation",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "replyId",
                        "in": "path",
                        "description": "The ID of the reply",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin reply deleted"
                    }
                }
            }
        },
        "/api/blogs": {
            "get": {
                "tags": [
                    "Blogs"
                ],
                "summary": "List blogs",
                "operationId": "52e391c5fd6ace0b723f97c41741b181",
                "responses": {
                    "200": {
                        "description": "List of blogs"
                    }
                }
            }
        },
        "/api/admin/blogs": {
            "post": {
                "tags": [
                    "Admin Blogs"
                ],
                "summary": "Create a new blog",
                "operationId": "ecf4ff13d7d208d864d9af8afb548dd9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "slug",
                                    "content"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "slug": {
                                        "type": "string"
                                    },
                                    "excerpt": {
                                        "type": "string"
                                    },
                                    "content": {
                                        "type": "string"
                                    },
                                    "cover_image": {
                                        "type": "string"
                                    },
                                    "author_id": {
                                        "type": "integer"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "draft",
                                            "published"
                                        ]
                                    },
                                    "published_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Blog created successfully"
                    }
                }
            }
        },
        "/api/blogs/{id}": {
            "get": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Get a single blog by ID",
                "operationId": "7a165586ac7a4453caca53c8ee1cbd54",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blog found"
                    },
                    "404": {
                        "description": "Blog not found"
                    }
                }
            }
        },
        "/api/admin/blogs/{id}": {
            "put": {
                "tags": [
                    "Admin Blogs"
                ],
                "summary": "Update a blog",
                "operationId": "e81fe9584a89b2755985fa72eb374c2e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "slug": {
                                        "type": "string"
                                    },
                                    "excerpt": {
                                        "type": "string"
                                    },
                                    "content": {
                                        "type": "string"
                                    },
                                    "cover_image": {
                                        "type": "string"
                                    },
                                    "author_id": {
                                        "type": "integer"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "draft",
                                            "published"
                                        ]
                                    },
                                    "published_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Blog updated"
                    },
                    "404": {
                        "description": "Blog not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin Blogs"
                ],
                "summary": "Delete a blog",
                "operationId": "1669b59221aa4be5c4e9d49bb48d5f05",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted successfully"
                    },
                    "404": {
                        "description": "Blog not found"
                    }
                }
            }
        },
        "/api/admin/category-attributes": {
            "get": {
                "tags": [
                    "Admin Category Attributes"
                ],
                "summary": "List all category attributes",
                "operationId": "d9acb502fb766de372a3c0652aa52ee9",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            },
            "post": {
                "tags": [
                    "Admin Category Attributes"
                ],
                "summary": "Create a new category attribute",
                "operationId": "f88a783afa83081624628e8cfcdf53dc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "category_id",
                                    "name"
                                ],
                                "properties": {
                                    "category_id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/api/admin/category-attributes/{id}": {
            "get": {
                "tags": [
                    "Admin Category Attributes"
                ],
                "summary": "Get a specific category attribute by ID",
                "operationId": "977a6a87362ec4194dffe1160127f97a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Admin Category Attributes"
                ],
                "summary": "Update a category attribute",
                "operationId": "7691117a43b6358a82935059ac9fcbe5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin Category Attributes"
                ],
                "summary": "Delete a category attribute",
                "operationId": "448f24a0f0d8c5ee7169147926fc1e76",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/api/admin/category-attributes/{id}/values": {
            "get": {
                "tags": [
                    "Admin Category Attributes"
                ],
                "summary": "Get all values for a specific category attribute",
                "operationId": "d69b52a1a0beb71b3ac72060922860fe",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/admin/category-attributes/values": {
            "post": {
                "tags": [
                    "Admin Category Attributes"
                ],
                "summary": "Create a new value for a category attribute",
                "operationId": "91b402ba3bf42079fd18bec93b81b3fa",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "category_attribute_id",
                                    "value"
                                ],
                                "properties": {
                                    "category_attribute_id": {
                                        "type": "integer"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/api/admin/category-attributes/values/{id}": {
            "post": {
                "tags": [
                    "Admin Category Attributes"
                ],
                "summary": "Update a category attribute value",
                "operationId": "c8c5a8c58345ad96720e01d2712aff32",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "value"
                                ],
                                "properties": {
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin Category Attributes"
                ],
                "summary": "Delete a category attribute value",
                "operationId": "77666c6b4d148d0254a99c81f683990c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/api/categories/flat/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get direct children of a category or flat structure of all",
                "operationId": "7eecdc4da9227626e1fa5a97e7af208f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "integer,default=0"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Categories retrieved"
                    }
                }
            }
        },
        "/api/categories/root": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get all root categories",
                "operationId": "e9cddf955d422408ff569762c3f02be2",
                "responses": {
                    "200": {
                        "description": "List of root categories"
                    }
                }
            }
        },
        "/api/admin/categories": {
            "post": {
                "tags": [
                    "Admin Categories"
                ],
                "summary": "Create a new category",
                "operationId": "b6debc8966a8a9c67c05b11372ba5d86",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully"
                    }
                }
            }
        },
        "/api/categories/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get a specific category",
                "operationId": "b5371ac0f1579bfc70c3d50ba78865cb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category found"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            }
        },
        "/api/admin/categories/{id}": {
            "put": {
                "tags": [
                    "Admin Categories"
                ],
                "summary": "Update a category",
                "operationId": "e71fc0468144def0740c0fea7a736e50",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully"
                    },
                    "404": {
                        "description": "Category not found or not updated"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin Categories"
                ],
                "summary": "Delete a category",
                "operationId": "758ac4f7cb5b21e5640e6dd136f3d77c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully"
                    },
                    "404": {
                        "description": "Category not found or not deleted"
                    }
                }
            }
        },
        "/api/categories/hierarchy": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get category hierarchy",
                "operationId": "5abfad266895692d2a5479d35e3c7f76",
                "responses": {
                    "200": {
                        "description": "Hierarchy retrieved"
                    }
                }
            }
        },
        "/api/categories/{id}/breadcrumb": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get breadcrumb for a category",
                "operationId": "a34fdb9cc99f902af88c93fe20622869",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Breadcrumb retrieved"
                    }
                }
            }
        },
        "/api/categories/{id}/descendants": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get descendants of a category",
                "operationId": "24c85c8ccfd5744c00799ae4b70452f7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Descendants retrieved"
                    }
                }
            }
        },
        "/api/categories/leaf": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get all leaf categories",
                "operationId": "1703f866064741ff068f7e3e16a45f52",
                "responses": {
                    "200": {
                        "description": "Leaf categories retrieved"
                    }
                }
            }
        },
        "/api/admin/categories/{id}/products": {
            "get": {
                "tags": [
                    "Admin Categories"
                ],
                "summary": "Get products of a category",
                "operationId": "7e5ed00bbbc7471a481ef8be3c8e8f88",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products retrieved"
                    }
                }
            }
        },
        "/api/categories/{id}/attributes": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get attributes of a category",
                "operationId": "2b5435585933a47ad6a06556d55539f6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attributes retrieved"
                    }
                }
            }
        },
        "/api/admin/customers": {
            "get": {
                "tags": [
                    "Admin - Customers"
                ],
                "summary": "Get all customers",
                "operationId": "d4673fd730cc33cff28288a89908297d",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of customers per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of customers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Customer"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/customers/{id}": {
            "get": {
                "tags": [
                    "Admin - Customers"
                ],
                "summary": "Get single customer by ID",
                "operationId": "9dbc25f9584c4b06ad89eb256b14097c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Customer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Admin - Customers"
                ],
                "summary": "Update customer",
                "operationId": "6d8e456aa22a9996c36d4379e7226c64",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Customer"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Customer updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Customer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin - Customers"
                ],
                "summary": "Delete customer",
                "operationId": "69240d6358e3c189dd6531f29581ad7f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found"
                    }
                }
            }
        },
        "/api/admin/orders": {
            "get": {
                "tags": [
                    "Admin Orders"
                ],
                "summary": "Display a listing of all orders",
                "operationId": "f954f3dfa0d14a0dbea3336954f7bace",
                "responses": {
                    "200": {
                        "description": "List of orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Order"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Admin Orders"
                ],
                "summary": "Create a new order",
                "operationId": "ac9de7f6338d9523f477427635b5280e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/orders/{id}": {
            "get": {
                "tags": [
                    "Admin Orders"
                ],
                "summary": "Display the specified order by ID",
                "operationId": "e7e6d283779bcb33a966e6b60dc73b87",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Admin Orders"
                ],
                "summary": "Update the specified order",
                "operationId": "6a871b138ad8f7767d5b5031385ce402",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed to update order"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin Orders"
                ],
                "summary": "Delete the specified order",
                "operationId": "65fa20f05c86dcf47c4aa4d038aa991b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order deleted"
                    },
                    "400": {
                        "description": "Failed to delete order"
                    }
                }
            }
        },
        "/api/admin/orders/order-number/{orderNumber}": {
            "get": {
                "tags": [
                    "Admin Orders"
                ],
                "summary": "Display the specified order by order number",
                "operationId": "95cc7bd47f4c1fa88005f96d602ef837",
                "parameters": [
                    {
                        "name": "orderNumber",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/orders/customer/{customerId}": {
            "get": {
                "tags": [
                    "Admin Orders"
                ],
                "summary": "Get orders for a specific customer",
                "operationId": "5f86b7a80b6e3aaf7f022ea93273445b",
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer's orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Order"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/orders/recent/{limit}": {
            "get": {
                "tags": [
                    "Admin Orders"
                ],
                "summary": "Get the most recent orders",
                "operationId": "275e8b40410a99099012fb962c7ec0b8",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "path",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of recent orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Order"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/orders/expired": {
            "get": {
                "tags": [
                    "Admin Orders"
                ],
                "summary": "Get expired orders",
                "operationId": "9b592c9b16dec9eb4fcb48eba66f14f7",
                "responses": {
                    "200": {
                        "description": "List of expired orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Order"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/orders/active": {
            "get": {
                "tags": [
                    "Admin Orders"
                ],
                "summary": "Get active orders",
                "operationId": "0128766a8a4d5035c61537e835be521a",
                "responses": {
                    "200": {
                        "description": "List of active orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Order"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/orders/{id}/paid": {
            "post": {
                "tags": [
                    "Admin Orders"
                ],
                "summary": "Mark an order as paid",
                "operationId": "0d6a05ab409210650f7514036895f185",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "payment_method": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order marked as paid"
                    },
                    "400": {
                        "description": "Failed to mark order as paid"
                    }
                }
            }
        },
        "/api/admin/orders/{orderId}/items": {
            "post": {
                "tags": [
                    "Admin Orders"
                ],
                "summary": "Create order items from cart items",
                "operationId": "56d68b4065c2daa68591ad1bcc3a81fd",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "items": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/OrderItem"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order items created"
                    }
                }
            }
        },
        "/api/admin/orders/{orderId}/items/{itemId}": {
            "delete": {
                "tags": [
                    "Admin Orders"
                ],
                "summary": "Delete an order item",
                "operationId": "4e6f1656058af80a2ce40f803863c578",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order item deleted"
                    },
                    "404": {
                        "description": "Order item not found"
                    }
                }
            }
        },
        "/api/admin/orders/{id}/status": {
            "put": {
                "tags": [
                    "Admin Orders"
                ],
                "summary": "Update the status of an order",
                "operationId": "9ce4bdb28ea07a751a86d4f5ca1e0840",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order status updated"
                    },
                    "400": {
                        "description": "Failed to update order status"
                    }
                }
            }
        },
        "/api/admin/orders/{id}/payment-status": {
            "put": {
                "tags": [
                    "Admin Orders"
                ],
                "summary": "Update the payment status of an order",
                "operationId": "387d47cdfc8ce24477e56541a7c3d742",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "payment_status": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment status updated"
                    },
                    "400": {
                        "description": "Failed to update payment status"
                    }
                }
            }
        },
        "/api/admin/orders/{id}/payment-method": {
            "put": {
                "tags": [
                    "Admin Orders"
                ],
                "summary": "Update the payment method of an order",
                "operationId": "a346f5d2cfc33ae5a9323fb0256595cd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "payment_method": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment method updated"
                    },
                    "400": {
                        "description": "Failed to update payment method"
                    }
                }
            }
        },
        "/api/admin/products": {
            "post": {
                "tags": [
                    "Admin Products"
                ],
                "summary": "Create a new product",
                "operationId": "ff11d12615a68edd8d75eb6fe4d5f885",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreProductRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully."
                    }
                }
            }
        },
        "/api/admin/products/{id}": {
            "put": {
                "tags": [
                    "Admin Products"
                ],
                "summary": "Update an existing product",
                "operationId": "1234c087b21bd1df187ed757f67000ea",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProductRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully."
                    },
                    "400": {
                        "description": "Bad request, validation failed."
                    },
                    "404": {
                        "description": "Product not found."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin Products"
                ],
                "summary": "Delete a product",
                "operationId": "07ca3329005fedce634d7afd90df29f5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully."
                    }
                }
            }
        },
        "/api/admin/products/{parentId}/variants": {
            "post": {
                "tags": [
                    "Admin Products"
                ],
                "summary": "Add a variant to a product",
                "operationId": "bdd5fd0cee3f6880523fc96f5ad899e5",
                "parameters": [
                    {
                        "name": "parentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VariantRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Variant added."
                    }
                }
            }
        },
        "/api/admin/products/variants/{variantId}": {
            "put": {
                "tags": [
                    "Admin Products"
                ],
                "summary": "Update a product variant",
                "operationId": "6b393b15e69cda69902916d4c8e0f45e",
                "parameters": [
                    {
                        "name": "variantId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VariantRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Variant updated."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin Products"
                ],
                "summary": "Delete a variant",
                "operationId": "da2ce9d65fdf6f662e4b813c36e9e49a",
                "parameters": [
                    {
                        "name": "variantId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Variant deleted."
                    }
                }
            }
        },
        "/api/admin/products/upload-image": {
            "post": {
                "tags": [
                    "Admin Products"
                ],
                "summary": "Upload a product image to temp",
                "operationId": "e026106ff10a8b1b30f84e01dedc4b19",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "image"
                                ],
                                "properties": {
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Image uploaded in temp successfully."
                    }
                }
            }
        },
        "/api/admin/products/{id}/image": {
            "post": {
                "tags": [
                    "Admin Products"
                ],
                "summary": "Attach uploaded image to product",
                "operationId": "4dfa8852ccbd18c64f94db46a0519833",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "image_path"
                                ],
                                "properties": {
                                    "image_path": {
                                        "type": "string"
                                    },
                                    "order": {
                                        "type": "integer"
                                    },
                                    "is_primary": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Image successfully attached to product."
                    }
                }
            }
        },
        "/api/admin/products/image/{id}": {
            "put": {
                "tags": [
                    "Admin Products"
                ],
                "summary": "Update image metadata",
                "operationId": "048a66200ee8a9bebbd366120961ec8f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "order": {
                                        "type": "integer"
                                    },
                                    "is_primary": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Image updated successfully."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin Products"
                ],
                "summary": "Delete product image",
                "operationId": "944108322da0a4e82bb8df5a125ab623",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image deleted successfully."
                    }
                }
            }
        },
        "/api/admin/shipments": {
            "get": {
                "tags": [
                    "Admin Shipments"
                ],
                "summary": "Get all shipments",
                "operationId": "3d5efd021b824b5cf6a5ce1e31c5cdb0",
                "responses": {
                    "200": {
                        "description": "List of shipments"
                    }
                }
            },
            "post": {
                "tags": [
                    "Admin Shipments"
                ],
                "summary": "Create a new shipment",
                "operationId": "1fd921d4e4deb252e39dbbc341cf69a1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreShipmentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Shipment created"
                    }
                }
            }
        },
        "/api/admin/shipments/{id}": {
            "get": {
                "tags": [
                    "Admin Shipments"
                ],
                "summary": "Get shipment by ID",
                "operationId": "c574bee6873120b0bb3b3e0ae0196871",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Shipment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Shipment details"
                    },
                    "404": {
                        "description": "Shipment not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Admin Shipments"
                ],
                "summary": "Update an existing shipment",
                "operationId": "ac2774c73be02e0b922468014a730df3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Shipment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateShipmentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Shipment updated"
                    },
                    "404": {
                        "description": "Shipment not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin Shipments"
                ],
                "summary": "Delete a shipment",
                "operationId": "da72d969228416bda637056a8af4b90c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Shipment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Shipment deleted"
                    },
                    "404": {
                        "description": "Shipment not found"
                    }
                }
            }
        },
        "/api/admin/carriers": {
            "get": {
                "tags": [
                    "Admin Shipments"
                ],
                "summary": "Get all carriers",
                "operationId": "8aad4afcb2479c7cc97b1deb683bfd55",
                "responses": {
                    "200": {
                        "description": "List of all carriers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Carrier"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Admin Shipments"
                ],
                "summary": "Create a new carrier",
                "operationId": "e8794abd20774cf75af7534d88dff962",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Carrier name",
                                        "type": "string"
                                    },
                                    "tracking_url": {
                                        "description": "Carrier tracking URL",
                                        "type": "string"
                                    },
                                    "contact_number": {
                                        "description": "Carrier contact number",
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "description": "Carrier status (active or inactive)",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Carrier created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Carrier"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data provided"
                    }
                }
            }
        },
        "/api/admin/carriers/{id}": {
            "get": {
                "tags": [
                    "Admin Shipments"
                ],
                "summary": "Get carrier details by ID",
                "operationId": "2359166ac7a6b6ee4b98c3c91b7c2653",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the carrier",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Carrier details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Carrier"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Carrier not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Admin Shipments"
                ],
                "summary": "Update carrier details",
                "operationId": "0286f342e14f67a9048ddab9d1251ba4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the carrier",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Carrier name",
                                        "type": "string"
                                    },
                                    "tracking_url": {
                                        "description": "Carrier tracking URL",
                                        "type": "string"
                                    },
                                    "contact_number": {
                                        "description": "Carrier contact number",
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "description": "Carrier status (active or inactive)",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Carrier updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Carrier"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Carrier not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin Shipments"
                ],
                "summary": "Delete a carrier",
                "operationId": "dce21ddfd06b053994079213b6441fe2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the carrier",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Carrier deleted successfully"
                    },
                    "404": {
                        "description": "Carrier not found"
                    }
                }
            }
        },
        "/api/customers/ask-otp": {
            "post": {
                "tags": [
                    "Customer Authentication"
                ],
                "summary": "Request OTP for phone number",
                "operationId": "2f75efbbeb3a6dd092bb35a3c600236e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "phone": {
                                        "type": "string",
                                        "example": "09123456789"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully"
                    }
                }
            }
        },
        "/api/customers/verify-otp": {
            "post": {
                "tags": [
                    "Customer Authentication"
                ],
                "summary": "Verify OTP and login/register",
                "operationId": "b056790e7e582286ebd7664f69565c9d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "phone": {
                                        "type": "string",
                                        "example": "09123456789"
                                    },
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful, token returned"
                    }
                }
            }
        },
        "/api/customers/reset-password": {
            "post": {
                "tags": [
                    "Customer Authentication"
                ],
                "summary": "Reset customer password using OTP",
                "operationId": "f8957e8e1bf8ef64e4135b8a4b4889e9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "phone": {
                                        "type": "string",
                                        "example": "09123456789"
                                    },
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "newpass"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "newpass"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully"
                    }
                }
            }
        },
        "/api/customers/login-password": {
            "post": {
                "tags": [
                    "Customer Authentication"
                ],
                "summary": "Login using email and password",
                "operationId": "cdf37d0a08fa32c6926599efda6f24aa",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "customer@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful"
                    }
                }
            }
        },
        "/api/customers/show-profile": {
            "get": {
                "tags": [
                    "Customer Profile"
                ],
                "summary": "Get the authenticated customer's profile",
                "description": "Retrieve the currently authenticated customer's profile",
                "operationId": "10e43bc6b99eeca5805b1b006e94f8d2",
                "responses": {
                    "200": {
                        "description": "Customer profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/update-profile": {
            "post": {
                "tags": [
                    "Customer Profile"
                ],
                "summary": "Update authenticated customer's profile",
                "description": "Update the currently authenticated customer's profile",
                "operationId": "3e121d2805cb6ba999fdc0eb46e44d58",
                "requestBody": {
                    "description": "Customer profile data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProfileRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Customer profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/logout": {
            "post": {
                "tags": [
                    "Customer Authentication"
                ],
                "summary": "Logout customers",
                "description": "Revoke the customers's current access token and log them out.",
                "operationId": "38360068c1ab36b8c637fb386209b94f",
                "responses": {
                    "200": {
                        "description": "Customers logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/cart": {
            "get": {
                "tags": [
                    "Customer Cart"
                ],
                "summary": "Get all items in the customer's cart",
                "operationId": "ab26dc762893d78c787a6b85e3f5ff27",
                "responses": {
                    "200": {
                        "description": "List of cart items"
                    }
                }
            },
            "post": {
                "tags": [
                    "Customer Cart"
                ],
                "summary": "Add product to cart",
                "operationId": "32f2c88334449be2f957c771bf39447e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "product_id",
                                    "quantity"
                                ],
                                "properties": {
                                    "product_id": {
                                        "type": "integer"
                                    },
                                    "quantity": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product added to cart"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Customer Cart"
                ],
                "summary": "Clear all items from the customer's cart",
                "operationId": "e56395ac1f1f10b8afeda4f5367068a1",
                "responses": {
                    "200": {
                        "description": "Cart cleared"
                    }
                }
            }
        },
        "/api/customer/cart/{itemId}": {
            "put": {
                "tags": [
                    "Customer Cart"
                ],
                "summary": "Update quantity of a cart item",
                "operationId": "b21026396d9b9e4659eb17b01ac27ac3",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "quantity"
                                ],
                                "properties": {
                                    "quantity": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cart item updated"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Customer Cart"
                ],
                "summary": "Remove item from cart",
                "operationId": "693699b280134a74e12bfb767763197a",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item removed"
                    }
                }
            }
        },
        "/api/customer/cart/summary": {
            "get": {
                "tags": [
                    "Customer Cart"
                ],
                "summary": "Get cart subtotal and total quantity",
                "operationId": "1428bdad7a23809be5a764848cd01c59",
                "responses": {
                    "200": {
                        "description": "Cart summary"
                    }
                }
            }
        },
        "/api/customer/addresses": {
            "get": {
                "tags": [
                    "Customer Addresses"
                ],
                "summary": "Get all addresses for the authenticated customer",
                "operationId": "1e2d4aa50c7bd042ab570b4810f71b94",
                "responses": {
                    "200": {
                        "description": "List of addresses"
                    }
                }
            },
            "post": {
                "tags": [
                    "Customer Addresses"
                ],
                "summary": "Store a new address",
                "operationId": "5c129322ec4e04bfb091931e4482dc56",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreAddressRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Address created"
                    }
                }
            }
        },
        "/api/customer/addresses/{id}": {
            "get": {
                "tags": [
                    "Customer Addresses"
                ],
                "summary": "Get a specific address",
                "operationId": "7f66ca14f66677e53af652eb790cb012",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Address details"
                    },
                    "404": {
                        "description": "Address not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Customer Addresses"
                ],
                "summary": "Update an address",
                "operationId": "06fb1f34ca688ef458f4f980afe5ff27",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAddressRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Address updated"
                    },
                    "404": {
                        "description": "Address not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Customer Addresses"
                ],
                "summary": "Delete an address",
                "operationId": "65808a9527e0849e5d6087eb6bfdde59",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Address deleted successfully"
                    },
                    "404": {
                        "description": "Address not found"
                    }
                }
            }
        },
        "/api/customer/addresses/default": {
            "get": {
                "tags": [
                    "Customer Addresses"
                ],
                "summary": "Get the default address",
                "operationId": "d07e4dc451a992db75af61e9e71e7d58",
                "responses": {
                    "200": {
                        "description": "Default address"
                    },
                    "404": {
                        "description": "No default address found"
                    }
                }
            }
        },
        "/api/customer/orders": {
            "get": {
                "tags": [
                    "Customer Orders"
                ],
                "summary": "Get all orders for the authenticated customer",
                "operationId": "a937ee7c3a9e2429f1d853976b2f933d",
                "responses": {
                    "200": {
                        "description": "List of customer's orders"
                    }
                }
            },
            "post": {
                "tags": [
                    "Customer Orders"
                ],
                "summary": "Create an order from the customer's cart",
                "operationId": "f1bd737905588e5425a3cad730a83df3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "shipping_address_id",
                                    "shipping_cost"
                                ],
                                "properties": {
                                    "shipping_address_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "shipping_cost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 0
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Leave at the front door"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order created from cart"
                    },
                    "400": {
                        "description": "Cart is empty or invalid input"
                    }
                }
            }
        },
        "/api/customer/orders/update-from-cart/{orderId}": {
            "put": {
                "tags": [
                    "Customer Orders"
                ],
                "summary": "Update an order to match the customer's current cart",
                "operationId": "6d319061f8f605c0394b8e58490acd2f",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order updated from cart"
                    },
                    "400": {
                        "description": "Cart is empty or update failed"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/customer/product-comments/{productId}": {
            "get": {
                "tags": [
                    "Customer Product Comment Ratings"
                ],
                "summary": "List comments and ratings for a product",
                "operationId": "0080a636d5b6f942db24f78e1714691f",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "ID of the product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of comments"
                    }
                }
            }
        },
        "/api/customer/product-comments/view/{id}": {
            "get": {
                "tags": [
                    "Customer Product Comment Ratings"
                ],
                "summary": "Get a specific comment and rating",
                "operationId": "439e4915d01bedb4fb12c85ed0bbcb3f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Comment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment details"
                    },
                    "404": {
                        "description": "Comment not found"
                    }
                }
            }
        },
        "/api/customer/product-comments": {
            "post": {
                "tags": [
                    "Customer Product Comment Ratings"
                ],
                "summary": "Create a new comment and rating",
                "operationId": "3039ddeb20df8734a87f7f1cb9b52cad",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "product_id",
                                    "rating"
                                ],
                                "properties": {
                                    "product_id": {
                                        "type": "integer"
                                    },
                                    "comment": {
                                        "type": "string",
                                        "maxLength": 1000
                                    },
                                    "rating": {
                                        "type": "integer",
                                        "maximum": 5,
                                        "minimum": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Comment created"
                    }
                }
            }
        },
        "/api/customer/product-comments/{id}": {
            "put": {
                "tags": [
                    "Customer Product Comment Ratings"
                ],
                "summary": "Update a customer's comment",
                "operationId": "993f94f79955487c376d34f4937a7181",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Comment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "comment": {
                                        "type": "string",
                                        "maxLength": 1000
                                    },
                                    "rating": {
                                        "type": "integer",
                                        "maximum": 5,
                                        "minimum": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update result"
                    },
                    "403": {
                        "description": "Unauthorized or not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Customer Product Comment Ratings"
                ],
                "summary": "Delete a customer's comment",
                "operationId": "ac69ef4e3c4d6d5cb15c676a2acbfb34",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Comment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete result"
                    },
                    "403": {
                        "description": "Unauthorized or not found"
                    }
                }
            }
        },
        "/api/customer/product-comments/{id}/like": {
            "post": {
                "tags": [
                    "Customer Product Comment Ratings"
                ],
                "summary": "Like a comment",
                "operationId": "d59dff8615e668674218b3f456cbcaff",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Like successful"
                    }
                }
            }
        },
        "/api/customer/product-comments/{id}/dislike": {
            "post": {
                "tags": [
                    "Customer Product Comment Ratings"
                ],
                "summary": "Dislike a comment",
                "operationId": "564b8debae6d615b232060a72a9133ab",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dislike successful"
                    }
                }
            }
        },
        "/api/customer/product-comments/{id}/unlike": {
            "post": {
                "tags": [
                    "Customer Product Comment Ratings"
                ],
                "summary": "Remove like from a comment",
                "operationId": "2676d4998732d9e588e12dc804a0bf78",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Unlike successful"
                    }
                }
            }
        },
        "/api/customer/product-comments/{id}/undislike": {
            "post": {
                "tags": [
                    "Customer Product Comment Ratings"
                ],
                "summary": "Remove dislike from a comment",
                "operationId": "e948a747165a8f023962abec5ff720ef",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Undislike successful"
                    }
                }
            }
        },
        "/api/customer/product-conversations/{productId}": {
            "get": {
                "tags": [
                    "Customer Product Conversations"
                ],
                "summary": "Get approved conversations for a product",
                "operationId": "5d1ad2064334bde8fd51bede88c1c744",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "ID of the product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of conversations"
                    }
                },
                "security": [
                    {
                        "customerAuth": []
                    }
                ]
            }
        },
        "/api/customer/product-conversations": {
            "post": {
                "tags": [
                    "Customer Product Conversations"
                ],
                "summary": "Create a new conversation or reply",
                "operationId": "fcbad0055c40842163099278d98f8d37",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "product_id",
                                    "message"
                                ],
                                "properties": {
                                    "product_id": {
                                        "type": "integer"
                                    },
                                    "parent_id": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "message": {
                                        "type": "string",
                                        "maxLength": 2000
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Conversation created"
                    }
                },
                "security": [
                    {
                        "customerAuth": []
                    }
                ]
            }
        },
        "/api/customer/product-conversations/{id}": {
            "put": {
                "tags": [
                    "Customer Product Conversations"
                ],
                "summary": "Update a conversation (only if owned by customer)",
                "operationId": "c503f7bfc240cb0f5a21d615ffd5f569",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "message"
                                ],
                                "properties": {
                                    "message": {
                                        "type": "string",
                                        "maxLength": 2000
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Conversation updated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "customerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Customer Product Conversations"
                ],
                "summary": "Delete a conversation (only if owned by customer)",
                "operationId": "86e2cb51a0e97c7746379033ab8df789",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Conversation deleted"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "customerAuth": []
                    }
                ]
            }
        },
        "/api/customer/product-conversations/{id}/like": {
            "post": {
                "tags": [
                    "Customer Product Conversations"
                ],
                "summary": "Like a conversation",
                "operationId": "fd8030a4a4478a9a1f0eb3f89448eb92",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liked"
                    }
                },
                "security": [
                    {
                        "customerAuth": []
                    }
                ]
            }
        },
        "/api/customer/product-conversations/{id}/dislike": {
            "post": {
                "tags": [
                    "Customer Product Conversations"
                ],
                "summary": "Dislike a conversation",
                "operationId": "2cd7ffbcffde07ecca4b441864235bc5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Disliked"
                    }
                },
                "security": [
                    {
                        "customerAuth": []
                    }
                ]
            }
        },
        "/api/customer/product-conversations/{id}/undo-like": {
            "post": {
                "tags": [
                    "Customer Product Conversations"
                ],
                "summary": "Undo a like",
                "operationId": "b53b16b8ca6a737e124a5513bd15b2f8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Undo like success"
                    }
                },
                "security": [
                    {
                        "customerAuth": []
                    }
                ]
            }
        },
        "/api/customer/product-conversations/{id}/undo-dislike": {
            "post": {
                "tags": [
                    "Customer Product Conversations"
                ],
                "summary": "Undo a dislike",
                "operationId": "5138fc8cdffb27997b7960a2dfc306be",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Undo dislike success"
                    }
                },
                "security": [
                    {
                        "customerAuth": []
                    }
                ]
            }
        },
        "/api/customer/shipments/{shipmentId}": {
            "get": {
                "tags": [
                    "Customer Shipments"
                ],
                "summary": "Get shipment details",
                "operationId": "5143759adf83d92773b8dd66a35f8d09",
                "parameters": [
                    {
                        "name": "shipmentId",
                        "in": "path",
                        "description": "ID of the shipment",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Shipment details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Shipment"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You do not have permission to view this shipment."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Customer Shipments"
                ],
                "summary": "Update shipment details",
                "operationId": "181b70036d3fc34589f1dea1bbef11d4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Shipment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateShipmentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Shipment updated"
                    },
                    "404": {
                        "description": "Shipment not found"
                    }
                }
            }
        },
        "/api/customer/shipments": {
            "post": {
                "tags": [
                    "Customer Shipments"
                ],
                "summary": "Create a new shipment",
                "operationId": "d87d1ab1be99a0ae9775a48b99a53a39",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreShipmentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Shipment created"
                    }
                }
            }
        },
        "/api/customer/carriers": {
            "get": {
                "tags": [
                    "Customer Shipments"
                ],
                "summary": "Get all carriers",
                "operationId": "37643804777a2ea8e656785d45b8d8bf",
                "responses": {
                    "200": {
                        "description": "List of all carriers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Carrier"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/payment/pay/{gateway}": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Initiate a payment",
                "description": "Redirects user to the payment gateway for the given order.",
                "operationId": "pay",
                "parameters": [
                    {
                        "name": "gateway",
                        "in": "path",
                        "description": "Payment gateway (e.g., idpay, zarinpal)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "zarinpal"
                        }
                    },
                    {
                        "name": "order_number",
                        "in": "query",
                        "description": "The order number to initiate payment for",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "ORD123456789"
                        }
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirect to the selected gateway"
                    }
                }
            }
        },
        "/payment/idpay/callback": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Handle IDPay callback",
                "description": "Handles the payment verification callback from IDPay.",
                "operationId": "idpayCallback",
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "query",
                        "description": "The order number associated with the payment",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "ORD123456789"
                        }
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirects to payment result page"
                    }
                }
            }
        },
        "/payment/zarinpal/callback": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Handle Zarinpal callback",
                "description": "Handles the payment verification callback from Zarinpal.",
                "operationId": "zarinpalCallback",
                "parameters": [
                    {
                        "name": "Authority",
                        "in": "query",
                        "description": "Zarinpal authority code used to find the order",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "A00000123456789"
                        }
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirects to payment result page"
                    }
                }
            }
        },
        "/api/payment/verify": {
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Verify payment by Authority and gateway",
                "operationId": "2b9c41a49a26feccd19a6765e7c13484",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "Authority"
                                ],
                                "properties": {
                                    "Authority": {
                                        "type": "string",
                                        "example": "A123456789"
                                    },
                                    "gateway": {
                                        "description": "Payment gateway (default: zarinpal)",
                                        "type": "string",
                                        "example": "zarinpal"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Verification result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "order_id": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "order": {
                                            "description": "Order details",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing Authority parameter",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Missing Authority parameter"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction or Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Transaction not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Verification error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Verification error: ..."
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "order_id": {
                                            "type": "integer",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/payment/result": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Show payment result",
                "description": "Displays the result of a payment, including success or failure message.",
                "operationId": "paymentResult",
                "responses": {
                    "200": {
                        "description": "Returns the payment result view"
                    }
                }
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get a filtered list of products",
                "operationId": "getFilteredProducts",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search query to look for matches",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "samsung"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Filter by category ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    },
                    {
                        "name": "price_min",
                        "in": "query",
                        "description": "Minimum price filter",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 10.5
                        }
                    },
                    {
                        "name": "price_max",
                        "in": "query",
                        "description": "Maximum price filter",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 299.99
                        }
                    },
                    {
                        "name": "attributes[1][]",
                        "in": "query",
                        "description": "Filter by attribute ID 1 (example value IDs: 1, 2)",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "attributes[2][]",
                        "in": "query",
                        "description": "Filter by attribute ID 2 (example value IDs: 3, 4)",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "attributes[3][]",
                        "in": "query",
                        "description": "Filter by attribute ID 3 (example value IDs: 5, 6)",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Field to sort by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "price",
                                "created_at",
                                "sales",
                                "rating"
                            ],
                            "example": "price"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "example": "asc"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by active status",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Filtered product list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product details by ID",
                "operationId": "da5f5d9c8578a2463f9cc6079866d1de",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product details"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            }
        },
        "/api/admin/users/ask-otp": {
            "post": {
                "tags": [
                    "Admin Authentication"
                ],
                "summary": "Request OTP for phone number",
                "description": "Request an OTP to be sent to the user's phone number for registration.",
                "operationId": "b915c5f287a899d4cec4239e4c67a5f7",
                "requestBody": {
                    "description": "User's phone number to send OTP",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "phone": {
                                        "type": "string",
                                        "example": "01234567890"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OTP sent for registration"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid phone number format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid phone number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/users/verify-otp": {
            "post": {
                "tags": [
                    "Admin Authentication"
                ],
                "summary": "Verify OTP and get a token",
                "description": "Verify OTP sent to the user's phone number and return a JWT token.",
                "operationId": "754c702a82241cab54287ba3d0c87a8e",
                "requestBody": {
                    "description": "User's phone number and OTP to verify",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "phone": {
                                        "type": "string",
                                        "example": "01234567890"
                                    },
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP verified successfully and token returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "jwt-token-here"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid OTP",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid OTP"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/users/reset-password": {
            "post": {
                "tags": [
                    "Admin Authentication"
                ],
                "summary": "Reset password using OTP",
                "description": "Reset a user's password using OTP sent to their phone.",
                "operationId": "7cde5783308c87a8d83bddd71a3811da",
                "requestBody": {
                    "description": "Password reset data including OTP and new password",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "phone": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "new-password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "new-password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid OTP",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid OTP"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/users/login-password": {
            "post": {
                "tags": [
                    "Admin Authentication"
                ],
                "summary": "Login using email and password",
                "description": "Login with email and password and receive a JWT token.",
                "operationId": "c267ddd41674e3073445152cc17a3f48",
                "requestBody": {
                    "description": "Login credentials (email and password)",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful and token returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "jwt-token-here"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/users/logout": {
            "post": {
                "tags": [
                    "Admin Authentication"
                ],
                "summary": "Logout user",
                "description": "Revoke the user's current access token and log them out.",
                "operationId": "cfe90aec91721bb58860c38b56d1da14",
                "responses": {
                    "200": {
                        "description": "User logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/roles": {
            "get": {
                "tags": [
                    "Admin Roles"
                ],
                "summary": "Get all roles",
                "operationId": "db9b757c18c06baa33005fe130707670",
                "responses": {
                    "200": {
                        "description": "List of roles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Role"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Admin Roles"
                ],
                "summary": "Create a new role",
                "operationId": "cdf78dd8787ac42c2172b58a66664146",
                "requestBody": {
                    "$ref": "#/components/requestBodies/StoreOrUpdateRoleRequest"
                },
                "responses": {
                    "201": {
                        "description": "Role created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/admin/roles/{id}": {
            "get": {
                "tags": [
                    "Admin Roles"
                ],
                "summary": "Get a specific role by ID",
                "operationId": "16021c1c73274afd8a5f4ac3b49a7dcf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Admin Roles"
                ],
                "summary": "Update an existing role",
                "operationId": "fe27eece6de1e600f01817fc7798c8a8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/StoreOrUpdateRoleRequest"
                },
                "responses": {
                    "200": {
                        "description": "Role updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Role not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin Roles"
                ],
                "summary": "Delete a role",
                "operationId": "815ce55eee2b234b4467c10785655961",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role deleted successfully"
                    },
                    "404": {
                        "description": "Role not found"
                    }
                }
            }
        },
        "/api/admin/roles/permissions": {
            "get": {
                "tags": [
                    "Admin Roles"
                ],
                "summary": "Get available permission categories and actions",
                "operationId": "69ed11cd694b14fa49be85e5edc5b45f",
                "responses": {
                    "200": {
                        "description": "List of permission categories and actions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "category": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "users"
                                            }
                                        },
                                        "action": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "read"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/users": {
            "get": {
                "tags": [
                    "Admin Users"
                ],
                "summary": "Get all users",
                "description": "Retrieve a list of all users",
                "operationId": "52ff84ad280a135d79edbdd412c90646",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of users per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/admin/users/{id}": {
            "get": {
                "tags": [
                    "Admin Users"
                ],
                "summary": "Get single user by ID",
                "description": "Retrieve a user by their ID",
                "operationId": "e2380e7c0cb58a489fbfd293cfd42b41",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Admin Users"
                ],
                "summary": "Update user by ID",
                "description": "Update the user information by ID",
                "operationId": "9a983fd72853a3a1f35397a7af319a32",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin Users"
                ],
                "summary": "Delete user by ID",
                "description": "Delete a user by their ID",
                "operationId": "b3bc660dc846d53f169fb51b017b5d6e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/admin/users/show-profile": {
            "get": {
                "tags": [
                    "Admin Users"
                ],
                "summary": "Get the authenticated user's profile",
                "description": "Retrieve the currently authenticated user's profile",
                "operationId": "00c3fff133b808b7350efe1a6442c29a",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/admin/users/update-profile": {
            "post": {
                "tags": [
                    "Admin Users"
                ],
                "summary": "Update authenticated user's profile",
                "description": "Update the currently authenticated user's profile",
                "operationId": "a1a9b0c0c0c86ea2c217e5f8676299f0",
                "requestBody": {
                    "description": "User profile data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProfileRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "PaginationMeta": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "from": {
                        "type": "integer",
                        "example": 1
                    },
                    "last_page": {
                        "type": "integer",
                        "example": 10
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 15
                    },
                    "to": {
                        "type": "integer",
                        "example": 15
                    },
                    "total": {
                        "type": "integer",
                        "example": 150
                    }
                },
                "type": "object"
            },
            "CategoryRequest": {
                "required": [
                    "name",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Electronics"
                    },
                    "slug": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "electronics"
                    },
                    "parent_id": {
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "OrderRequest": {
                "required": [
                    "customer_id",
                    "shipping_address_id",
                    "status",
                    "payment_status",
                    "payment_method",
                    "subtotal",
                    "shipping_cost",
                    "total"
                ],
                "properties": {
                    "customer_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "shipping_address_id": {
                        "type": "integer",
                        "example": 10
                    },
                    "order_number": {
                        "type": "string",
                        "example": "ORD-20250421-XYZ"
                    },
                    "status": {
                        "type": "string",
                        "example": "pending"
                    },
                    "payment_status": {
                        "type": "string",
                        "example": "unpaid"
                    },
                    "payment_method": {
                        "type": "string",
                        "example": "online"
                    },
                    "subtotal": {
                        "type": "number",
                        "format": "float",
                        "example": 49.99
                    },
                    "discount": {
                        "type": "number",
                        "format": "float",
                        "example": 5
                    },
                    "tax": {
                        "type": "number",
                        "format": "float",
                        "example": 2.5
                    },
                    "shipping_cost": {
                        "type": "number",
                        "format": "float",
                        "example": 4.99
                    },
                    "total": {
                        "type": "number",
                        "format": "float",
                        "example": 52.48
                    },
                    "notes": {
                        "type": "string",
                        "example": "Leave at front door."
                    },
                    "placed_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-21T12:00:00Z"
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-22T12:00:00Z"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderItem"
                        }
                    }
                },
                "type": "object"
            },
            "StoreProductRequest": {
                "required": [
                    "name",
                    "slug",
                    "stock",
                    "sku",
                    "price",
                    "category_id"
                ],
                "properties": {
                    "name": {
                        "description": "Product name",
                        "type": "string",
                        "maxLength": 255
                    },
                    "slug": {
                        "description": "URL-friendly product slug",
                        "type": "string"
                    },
                    "description": {
                        "description": "Product description",
                        "type": "string",
                        "nullable": true
                    },
                    "weight": {
                        "description": "Product weight",
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "length": {
                        "description": "Product length",
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "width": {
                        "description": "Product width",
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "height": {
                        "description": "Product height",
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "stock": {
                        "description": "Product stock count",
                        "type": "integer"
                    },
                    "sku": {
                        "description": "Unique SKU for the product",
                        "type": "string"
                    },
                    "price": {
                        "description": "Product price",
                        "type": "number",
                        "format": "float"
                    },
                    "category_id": {
                        "description": "Category ID the product belongs to",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "UpdateProductRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Sample Product"
                    },
                    "slug": {
                        "type": "string",
                        "example": "sample-product"
                    },
                    "description": {
                        "type": "string",
                        "example": "Product description here."
                    },
                    "weight": {
                        "type": "number",
                        "format": "float",
                        "example": 1.5
                    },
                    "length": {
                        "type": "number",
                        "format": "float",
                        "example": 10
                    },
                    "width": {
                        "type": "number",
                        "format": "float",
                        "example": 5
                    },
                    "height": {
                        "type": "number",
                        "format": "float",
                        "example": 2
                    },
                    "stock": {
                        "type": "integer",
                        "example": 50
                    },
                    "sku": {
                        "type": "string",
                        "example": "SKU12345"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 199.99
                    },
                    "category_id": {
                        "type": "integer",
                        "example": 3
                    },
                    "attributes": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "category_attribute_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "category_attribute_value_id": {
                                    "type": "integer",
                                    "example": 10
                                }
                            },
                            "type": "object"
                        }
                    },
                    "variants": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "price": {
                                    "type": "number",
                                    "example": 99.99
                                },
                                "sku": {
                                    "type": "string",
                                    "example": "VAR123"
                                },
                                "stock": {
                                    "type": "integer",
                                    "example": 20
                                },
                                "is_active": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "attributes": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "category_attribute_id": {
                                                "type": "integer",
                                                "example": 2
                                            },
                                            "category_attribute_value_id": {
                                                "type": "integer",
                                                "example": 5
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "discount": {
                        "properties": {
                            "discount_amount": {
                                "type": "number",
                                "example": 10
                            },
                            "discount_percentage": {
                                "type": "number",
                                "example": 5
                            },
                            "start_date": {
                                "type": "string",
                                "format": "date",
                                "example": "2025-04-01"
                            },
                            "end_date": {
                                "type": "string",
                                "format": "date",
                                "example": "2025-04-30"
                            }
                        },
                        "type": "object"
                    },
                    "warranties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "policies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "image_path": {
                                    "type": "string",
                                    "example": "/images/product1.jpg"
                                },
                                "order": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "is_primary": {
                                    "type": "boolean",
                                    "example": true
                                }
                            },
                            "type": "object"
                        }
                    },
                    "specifications": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "expert_review": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "VariantRequest": {
                "required": [
                    "price",
                    "sku",
                    "stock",
                    "is_active",
                    "attributes"
                ],
                "properties": {
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 149.99
                    },
                    "sku": {
                        "type": "string",
                        "example": "VARIANT123"
                    },
                    "stock": {
                        "type": "integer",
                        "example": 30
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "attributes": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "category_attribute_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "category_attribute_value_id": {
                                    "type": "integer",
                                    "example": 3
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "StoreAddressRequest": {
                "required": [
                    "title",
                    "first_name",
                    "last_name",
                    "phone",
                    "email",
                    "country",
                    "province",
                    "city",
                    "postal_code",
                    "address_line_1"
                ],
                "properties": {
                    "title": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "Home"
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "Doe"
                    },
                    "phone": {
                        "type": "string",
                        "maxLength": 20,
                        "example": "+1234567890"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 255,
                        "example": "john.doe@example.com"
                    },
                    "country": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "USA"
                    },
                    "province": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "California"
                    },
                    "city": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "Los Angeles"
                    },
                    "postal_code": {
                        "type": "string",
                        "maxLength": 20,
                        "example": "90001"
                    },
                    "address_line_1": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "123 Main St"
                    },
                    "address_line_2": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Apt 4B",
                        "nullable": true
                    },
                    "is_default": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "StoreShipmentRequest": {
                "required": [
                    "order_id",
                    "carrier_id",
                    "shipping_address_id",
                    "tracking_number",
                    "cost"
                ],
                "properties": {
                    "order_id": {
                        "type": "integer",
                        "example": 123
                    },
                    "carrier_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "shipping_address_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "tracking_number": {
                        "type": "string",
                        "example": "TRACK123456"
                    },
                    "cost": {
                        "type": "number",
                        "format": "float",
                        "example": 50.99
                    },
                    "shipped_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-20T12:00:00Z"
                    },
                    "delivered_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-22T16:45:00Z"
                    }
                },
                "type": "object"
            },
            "UpdateAddressRequest": {
                "properties": {
                    "title": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "Home"
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "Doe"
                    },
                    "phone": {
                        "type": "string",
                        "maxLength": 20,
                        "example": "+1234567890"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 255,
                        "example": "john.doe@example.com"
                    },
                    "country": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "USA"
                    },
                    "province": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "California"
                    },
                    "city": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "Los Angeles"
                    },
                    "postal_code": {
                        "type": "string",
                        "maxLength": 20,
                        "example": "90001"
                    },
                    "address_line_1": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "123 Main St"
                    },
                    "address_line_2": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Apt 4B",
                        "nullable": true
                    },
                    "is_default": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "UpdateProfileRequest": {
                "title": "Update Profile Request",
                "description": "Request body for updating user profile",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "John Doe",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 255,
                        "example": "john@example.com",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "UpdateShipmentRequest": {
                "properties": {
                    "carrier_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "shipping_address_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "tracking_number": {
                        "type": "string",
                        "example": "TRACK123456"
                    },
                    "cost": {
                        "type": "number",
                        "format": "float",
                        "example": 50.99
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "shipped",
                            "delivered",
                            "cancelled"
                        ],
                        "example": "shipped"
                    },
                    "shipped_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-20T12:00:00Z"
                    },
                    "delivered_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-22T16:45:00Z"
                    }
                },
                "type": "object"
            },
            "Carrier": {
                "required": [
                    "name",
                    "is_active"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "DHL"
                    },
                    "tracking_url": {
                        "type": "string",
                        "example": "https://dhl.com/track?number={tracking_number}",
                        "nullable": true
                    },
                    "contact_number": {
                        "type": "string",
                        "example": "+1-800-123-4567",
                        "nullable": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2025-04-21T14:30:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2025-04-21T15:00:00Z"
                    }
                },
                "type": "object"
            },
            "Customer": {
                "required": [
                    "phone",
                    "password",
                    "email",
                    "name"
                ],
                "properties": {
                    "phone": {
                        "description": "Customer phone number",
                        "type": "string",
                        "example": "1234567890"
                    },
                    "email": {
                        "description": "Customer email address",
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "name": {
                        "description": "Customer's name",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "password": {
                        "description": "Customer password",
                        "type": "string",
                        "example": "secret123"
                    }
                },
                "type": "object"
            },
            "Order": {
                "title": "Order",
                "description": "Order model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "order_number": {
                        "type": "string",
                        "example": "ORD-20250417-001"
                    },
                    "status": {
                        "type": "string",
                        "example": "pending"
                    },
                    "payment_status": {
                        "type": "string",
                        "example": "unpaid"
                    },
                    "payment_method": {
                        "type": "string",
                        "example": "card"
                    },
                    "subtotal": {
                        "type": "number",
                        "format": "float",
                        "example": 150
                    },
                    "discount": {
                        "type": "number",
                        "format": "float",
                        "example": 10
                    },
                    "tax": {
                        "type": "number",
                        "format": "float",
                        "example": 12
                    },
                    "shipping_cost": {
                        "type": "number",
                        "format": "float",
                        "example": 5
                    },
                    "total": {
                        "type": "number",
                        "format": "float",
                        "example": 157
                    },
                    "notes": {
                        "type": "string",
                        "example": "Leave at the front door"
                    },
                    "placed_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-17T14:00:00Z"
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-17T14:15:00Z"
                    },
                    "is_expired": {
                        "type": "boolean",
                        "example": false
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "OrderItem": {
                "title": "Order Item",
                "description": "Order item model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "order_id": {
                        "type": "integer",
                        "example": 101
                    },
                    "product_id": {
                        "type": "integer",
                        "example": 55
                    },
                    "product_name": {
                        "type": "string",
                        "example": "Wireless Mouse"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 29.99
                    },
                    "quantity": {
                        "type": "integer",
                        "example": 2
                    },
                    "total": {
                        "type": "number",
                        "format": "float",
                        "example": 59.98
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "OrderTransaction": {
                "title": "Order Transaction",
                "description": "Represents a payment transaction related to an order",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "order_id": {
                        "type": "integer",
                        "example": 101
                    },
                    "transaction_id": {
                        "type": "string",
                        "example": "trx_ABC123456"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "success",
                            "failed",
                            "refunded"
                        ],
                        "example": "success"
                    },
                    "payment_method": {
                        "type": "string",
                        "enum": [
                            "cash",
                            "card",
                            "online"
                        ],
                        "example": "card"
                    },
                    "amount": {
                        "type": "number",
                        "format": "float",
                        "example": 99.99
                    },
                    "gateway": {
                        "type": "string",
                        "example": "Zarinpal"
                    },
                    "meta": {
                        "type": "object"
                    },
                    "payload": {
                        "type": "object"
                    },
                    "paid_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Product": {
                "title": "Product",
                "description": "Product model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Red T-Shirt"
                    },
                    "description": {
                        "type": "string",
                        "example": "Comfortable cotton t-shirt"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 19.99
                    },
                    "stock": {
                        "type": "integer",
                        "example": 10
                    },
                    "category_id": {
                        "type": "integer",
                        "example": 3
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-04-15T12:34:56Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-04-15T12:34:56Z"
                    }
                },
                "type": "object"
            },
            "Role": {
                "required": [
                    "name",
                    "description",
                    "permissions"
                ],
                "properties": {
                    "name": {
                        "description": "Role name",
                        "type": "string",
                        "example": "Admin"
                    },
                    "description": {
                        "description": "Role description",
                        "type": "string",
                        "example": "Administrator with full access"
                    },
                    "permissions": {
                        "description": "Permissions grouped by resource like users, products, ..., actions: [all, read, create, update, delete]",
                        "type": "object",
                        "example": {
                            "users": [
                                "read",
                                "create",
                                "update",
                                "delete"
                            ],
                            "products": [
                                "create",
                                "delete"
                            ],
                            "categories": [
                                "all"
                            ]
                        }
                    }
                },
                "type": "object"
            },
            "Shipment": {
                "required": [
                    "order_id",
                    "carrier_id",
                    "shipping_address_id",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 101
                    },
                    "order_id": {
                        "type": "integer",
                        "example": 25
                    },
                    "carrier_id": {
                        "type": "integer",
                        "example": 3
                    },
                    "shipping_address_id": {
                        "type": "integer",
                        "example": 88
                    },
                    "tracking_number": {
                        "type": "string",
                        "example": "1Z999AA10123456784",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "example": "shipped"
                    },
                    "cost": {
                        "type": "number",
                        "format": "float",
                        "example": 12.99
                    },
                    "shipped_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-21T10:30:00Z",
                        "nullable": true
                    },
                    "delivered_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-23T16:00:00Z",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "example": "Left at the front desk",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2025-04-21T09:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2025-04-21T09:30:00Z"
                    }
                },
                "type": "object"
            },
            "User": {
                "required": [
                    "phone",
                    "password",
                    "email",
                    "name"
                ],
                "properties": {
                    "phone": {
                        "description": "User phone number",
                        "type": "string",
                        "example": "1234567890"
                    },
                    "email": {
                        "description": "User email address",
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "name": {
                        "description": "User's name",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "password": {
                        "description": "User password",
                        "type": "string",
                        "example": "secret123"
                    },
                    "role": {
                        "$ref": "#/components/schemas/Role"
                    }
                },
                "type": "object"
            }
        },
        "requestBodies": {
            "StoreOrUpdateRoleRequest": {
                "description": "Role creation or update payload",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "required": [
                                "name"
                            ],
                            "properties": {
                                "name": {
                                    "description": "Role name",
                                    "type": "string",
                                    "example": "Admin"
                                },
                                "description": {
                                    "description": "Description of the role",
                                    "type": "string",
                                    "example": "Administrator with full access"
                                },
                                "permissions": {
                                    "description": "Permissions grouped by resource",
                                    "type": "object",
                                    "example": {
                                        "users": [
                                            "read",
                                            "create",
                                            "update"
                                        ],
                                        "products": [
                                            "delete"
                                        ],
                                        "categories": [
                                            "full"
                                        ]
                                    },
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "enum": [
                                                "read",
                                                "create",
                                                "update",
                                                "delete",
                                                "full"
                                            ]
                                        }
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "description": "Authentication using Bearer token (Sanctum)",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "security": [
        {
            "BearerAuth": []
        }
    ],
    "tags": [
        {
            "name": "Admin Product Comments",
            "description": "APIs for managing product comments and ratings in the admin panel."
        },
        {
            "name": "Admin Product Conversations",
            "description": "APIs for managing product conversations in the admin panel."
        },
        {
            "name": "Admin Blogs",
            "description": "Admin blog management"
        },
        {
            "name": "Admin Categories",
            "description": "Category management endpoints for the admin panel"
        },
        {
            "name": "Admin - Customers",
            "description": "Customer management endpoints for the admin panel"
        },
        {
            "name": "Admin Orders",
            "description": "Admin's Operations related to orders"
        },
        {
            "name": "Admin Shipments",
            "description": "Admin management for shipments and carriers"
        },
        {
            "name": "Customer Authentication",
            "description": "Authentication endpoints for customers"
        },
        {
            "name": "Customer Cart",
            "description": "Shopping cart management"
        },
        {
            "name": "Customer Orders"
        },
        {
            "name": "Customer Product Comment Ratings",
            "description": "Endpoints for managing customer product comments and ratings"
        },
        {
            "name": "Customer Product Conversations",
            "description": "Customer endpoints for managing product conversations"
        },
        {
            "name": "Customer Shipments",
            "description": "Operations related to customer shipments"
        },
        {
            "name": "Admin Authentication",
            "description": "User Authentication endpoints for the admin panel"
        },
        {
            "name": "Admin Roles",
            "description": "Role management"
        },
        {
            "name": "Admin Users",
            "description": "User management endpoints for the admin panel"
        },
        {
            "name": "Blogs",
            "description": "Blogs"
        },
        {
            "name": "Admin Category Attributes",
            "description": "Admin Category Attributes"
        },
        {
            "name": "Categories",
            "description": "Categories"
        },
        {
            "name": "Admin Products",
            "description": "Admin Products"
        },
        {
            "name": "Customer Profile",
            "description": "Customer Profile"
        },
        {
            "name": "Customer Addresses",
            "description": "Customer Addresses"
        },
        {
            "name": "Payments",
            "description": "Payments"
        },
        {
            "name": "Products",
            "description": "Products"
        }
    ]
}